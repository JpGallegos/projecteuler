#! /usr/bin/env python
from math import sqrt

"""\
Project Euler problem 2
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\
"""

def even_fibonacci_elements(n=3, limit_term=33):

    # Every third term in the Fibonacci sequence is even; so there is no need to calculate every
    # single term.
    # Also, any nth Fibonacci term can be expressed by
    #       F(n) = ((phi)^n - (-phi)^(-n))/sqrt(5)

    fib_elem = 0
    phi = (1 + sqrt(5))/2

    while n <= limit_term:
        fib_elem = (phi**n - (-phi)**(-n))/sqrt(5)
        print n, fib_elem 
        yield fib_elem
        n += 3   


sum_of_even_fibs = 0

for elem in even_fibonacci_elements():
    sum_of_even_fibs += elem

print sum_of_even_fibs